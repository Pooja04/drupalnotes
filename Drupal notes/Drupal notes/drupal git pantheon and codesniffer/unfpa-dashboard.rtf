{\rtf1\ansi\deff3\adeflang1025
{\fonttbl{\f0\froman\fprq2\fcharset0 Times New Roman;}{\f1\froman\fprq2\fcharset2 Symbol;}{\f2\fswiss\fprq2\fcharset0 Arial;}{\f3\fmodern\fprq1\fcharset0 Lucida Console;}{\f4\fswiss\fprq0\fcharset0 Calibri;}{\f5\fnil\fprq2\fcharset0 Microsoft YaHei;}{\f6\fnil\fprq2\fcharset0 Mangal;}{\f7\fnil\fprq0\fcharset128 Mangal;}}
{\colortbl;\red0\green0\blue0;\red128\green128\blue128;}
{\stylesheet{\s0\snext0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033 Default;}
{\s15\sbasedon0\snext16\sb240\sa120\keepn\hich\af5\dbch\af6\afs28\loch\f2\fs28 Heading;}
{\s16\sbasedon0\snext16\sb0\sa120 Text body;}
{\s17\sbasedon16\snext17\sb0\sa120\dbch\af7 List;}
{\s18\sbasedon0\snext18\sb120\sa120\noline\i\dbch\af7\afs24\ai\fs24 Caption;}
{\s19\sbasedon0\snext19\noline\dbch\af7 Index;}
}{\info{\creatim\yr0\mo0\dy0\hr0\min0}{\revtim\yr0\mo0\dy0\hr0\min0}{\printim\yr0\mo0\dy0\hr0\min0}{\comment OpenOffice}{\vern4110}}\deftab720\deftab720\deftab720\deftab720\deftab720\deftab720\deftab720\deftab720\deftab720\deftab720\deftab720\deftab720\deftab720\deftab720\deftab720\deftab720\deftab720\deftab720\deftab720\deftab720

{\*\pgdsctbl
{\pgdsc0\pgdscuse195\pgwsxn12240\pghsxn15840\marglsxn1800\margrsxn1800\margtsxn1440\margbsxn1440\pgdscnxt0 Default;}}
\formshade{\*\pgdscno0}\paperh15840\paperw12240\margl1800\margr1800\margt1440\margb1440\sectd\sbknone\sectunlocked1\pgndec\pgwsxn12240\pghsxn15840\marglsxn1800\margrsxn1800\margtsxn1440\margbsxn1440\ftnbj\ftnstart1\ftnrstcont\ftnnar\aenddoc\aftnrstcont\aftnstart1\aftnnrlc
\pgndec\pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033\sl276\slmult1\sb0\sa200{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18\lang9
FOUND 198 ERRORS AND 24 WARNINGS AFFECTING 185 LINES}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
----------------------------------------------------------------------}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
   }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
61 | ERROR   | [x] Whitespace found at end of line}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
   }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
62 | ERROR   | [ ] Missing parameter comment}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
   }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
72 | ERROR   | [x] Case breaking statements must be followed by a}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     single blank line}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
   }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
73 | WARNING | [ ] Code after RETURN statement cannot be executed}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
   }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
80 | ERROR   | [x] Case breaking statements must be followed by a}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     single blank line}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
   }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
81 | WARNING | [ ] Code after RETURN statement cannot be executed}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
   }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
88 | ERROR   | [x] Case breaking statements must be followed by a}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     single blank line}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
   }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
89 | WARNING | [ ] Code after RETURN statement cannot be executed}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
   }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
96 | ERROR   | [x] Case breaking statements must be followed by a}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     single blank line}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
   }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
97 | WARNING | [ ] Code after RETURN statement cannot be executed}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
100 | ERROR   | [x] Case breaking statement indented incorrectly;}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     expected 6 spaces, found 4}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
101 | ERROR   | [x] Whitespace found at end of line}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
147 | ERROR   | [ ] Missing parameter comment}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
149 | ERROR   | [x] Parameter comment indentation must be 3 spaces,}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     found 1 spaces}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
152 | ERROR   | [x] Return comment indentation must be 3 spaces,}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     found 1 spaces}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
176 | WARNING | [ ] Line exceeds 80 characters; contains 89}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     characters}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
177 | ERROR   | [x] Whitespace found at end of line}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
179 | ERROR   | [x] Parameter comment indentation must be 3 spaces,}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     found 2 spaces}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
183 | WARNING | [ ] Line exceeds 80 characters; contains 110}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     characters}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
206 | ERROR   | [x] Inline control structures are not allowed}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
208 | ERROR   | [x] Expected 1 space after ELSE keyword; newline}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     found}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
208 | ERROR   | [x] Inline control structures are not allowed}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
218 | ERROR   | [x] Inline control structures are not allowed}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
222 | ERROR   | [x] Inline control structures are not allowed}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
224 | ERROR   | [x] Use "elseif" in place of "else if"}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
224 | ERROR   | [x] Inline control structures are not allowed}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
226 | ERROR   | [x] Use "elseif" in place of "else if"}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
229 | ERROR   | [x] There should be no white space after an opening}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     "("}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
230 | ERROR   | [x] There should be no white space after an opening}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     "("}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
233 | ERROR   | [x] Expected newline after closing brace}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
233 | ERROR   | [x] Expected 1 space after ELSE keyword; newline}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     found}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
233 | ERROR   | [x] Inline control structures are not allowed}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
266 | ERROR   | [ ] If the line declaring an array spans longer}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     than 80 characters, each element should be}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     broken into its own line}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
267 | ERROR   | [x] Inline control structures are not allowed}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
269 | ERROR   | [x] Use "elseif" in place of "else if"}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
269 | ERROR   | [x] Inline control structures are not allowed}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
271 | ERROR   | [x] Expected 1 space after ELSE keyword; newline}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     found}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
271 | ERROR   | [x] Inline control structures are not allowed}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
277 | ERROR   | [x] There must be exactly one blank line before the}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     tags in a doc comment}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
278 | ERROR   | [x] Parameter comment indentation must be 3 spaces,}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     found 2 spaces}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
281 | ERROR   | [x] Return comment indentation must be 3 spaces,}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     found 2 spaces}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
296 | ERROR   | [x] Missing function doc comment}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
313 | ERROR   | [x] Return comment indentation must be 3 spaces,}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     found 2 spaces}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
338 | ERROR   | [x] Return comment indentation must be 3 spaces,}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     found 2 spaces}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
356 | WARNING | [ ] Line exceeds 80 characters; contains 85}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     characters}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
357 | ERROR   | [x] There must be exactly one blank line before the}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     tags in a doc comment}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
357 | ERROR   | [ ] Missing parameter comment}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
360 | ERROR   | [x] Return comment indentation must be 3 spaces,}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     found 2 spaces}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
366 | WARNING | [ ] Line exceeds 80 characters; contains 82}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     characters}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
437 | ERROR   | [x] There must be exactly one blank line before the}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     tags in a doc comment}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
437 | ERROR   | [ ] Missing parameter comment}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
440 | ERROR   | [x] Return comment indentation must be 3 spaces,}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     found 2 spaces}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
443 | ERROR   | [x] Line indented incorrectly; expected 2 spaces,}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     found 0}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
469 | ERROR   | [ ] Variable "CO4_last_element" starts with a}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     capital letter, but only $lowerCamelCase or}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     $snake_case is allowed}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
470 | ERROR   | [ ] Variable "CO1_last_element" starts with a}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     capital letter, but only $lowerCamelCase or}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     $snake_case is allowed}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
471 | ERROR   | [ ] Variable "CO5_last_element" starts with a}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     capital letter, but only $lowerCamelCase or}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     $snake_case is allowed}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
472 | ERROR   | [ ] Variable "CO9_last_element_nicked" starts with}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     a capital letter, but only $lowerCamelCase or}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     $snake_case is allowed}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
473 | ERROR   | [ ] Variable "CO9_last_element_partly_removed"}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     starts with a capital letter, but only}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     $lowerCamelCase or $snake_case is allowed}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
474 | ERROR   | [ ] Variable "CO9_last_element_sewn_closed" starts}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     with a capital letter, but only $lowerCamelCase}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     or $snake_case is allowed}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
476 | ERROR   | [ ] Variable "CO9_last_element_doctor" starts with}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     a capital letter, but only $lowerCamelCase or}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     $snake_case is allowed}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
477 | ERROR   | [ ] Variable "CO9_last_element_nurse" starts with a}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     capital letter, but only $lowerCamelCase or}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     $snake_case is allowed}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
478 | ERROR   | [ ] Variable}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     "CO9_last_element_traditional_excisors" starts}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     with a capital letter, but only $lowerCamelCase}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     or $snake_case is allowed}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
493 | ERROR   | [x] Whitespace found at end of line}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
495 | ERROR   | [ ] Variable "CO4_last_element" starts with a}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     capital letter, but only $lowerCamelCase or}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     $snake_case is allowed}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
495 | ERROR   | [ ] Variable "CO4_last_element" starts with a}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     capital letter, but only $lowerCamelCase or}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     $snake_case is allowed}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
496 | ERROR   | [ ] Variable "CO4_last_element" starts with a}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     capital letter, but only $lowerCamelCase or}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     $snake_case is allowed}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
496 | ERROR   | [ ] Variable "CO4_last_element" starts with a}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     capital letter, but only $lowerCamelCase or}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     $snake_case is allowed}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
497 | ERROR   | [ ] Variable "CO4_last_element" starts with a}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     capital letter, but only $lowerCamelCase or}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     $snake_case is allowed}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
497 | ERROR   | [ ] Variable "CO4_last_element" starts with a}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     capital letter, but only $lowerCamelCase or}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     $snake_case is allowed}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
498 | ERROR   | [ ] Variable "CO4_last_element" starts with a}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     capital letter, but only $lowerCamelCase or}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     $snake_case is allowed}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
498 | ERROR   | [ ] Variable "CO4_last_element" starts with a}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     capital letter, but only $lowerCamelCase or}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     $snake_case is allowed}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
499 | ERROR   | [ ] Variable "CO4_last_element" starts with a}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     capital letter, but only $lowerCamelCase or}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     $snake_case is allowed}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
499 | ERROR   | [ ] Variable "CO4_last_element" starts with a}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     capital letter, but only $lowerCamelCase or}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     $snake_case is allowed}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
500 | ERROR   | [ ] Variable "CO4_last_element" starts with a}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     capital letter, but only $lowerCamelCase or}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     $snake_case is allowed}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
500 | ERROR   | [ ] Variable "CO4_last_element" starts with a}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     capital letter, but only $lowerCamelCase or}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     $snake_case is allowed}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
502 | WARNING | [ ] Line exceeds 80 characters; contains 81}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     characters}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
503 | ERROR   | [ ] Variable "CO1_last_element" starts with a}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     capital letter, but only $lowerCamelCase or}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     $snake_case is allowed}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
503 | ERROR   | [ ] Variable "CO1_last_element" starts with a}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     capital letter, but only $lowerCamelCase or}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     $snake_case is allowed}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
504 | ERROR   | [ ] Variable "CO5_last_element" starts with a}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     capital letter, but only $lowerCamelCase or}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     $snake_case is allowed}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
504 | ERROR   | [ ] Variable "CO5_last_element" starts with a}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     capital letter, but only $lowerCamelCase or}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     $snake_case is allowed}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
505 | ERROR   | [ ] Variable "CO9_last_element_nicked" starts with}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     a capital letter, but only $lowerCamelCase or}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     $snake_case is allowed}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
505 | ERROR   | [ ] Variable "CO9_last_element_nicked" starts with}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     a capital letter, but only $lowerCamelCase or}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     $snake_case is allowed}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
506 | ERROR   | [ ] Variable "CO9_last_element_partly_removed"}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     starts with a capital letter, but only}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     $lowerCamelCase or $snake_case is allowed}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
506 | ERROR   | [ ] Variable "CO9_last_element_partly_removed"}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     starts with a capital letter, but only}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     $lowerCamelCase or $snake_case is allowed}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
507 | ERROR   | [ ] Variable "CO9_last_element_sewn_closed" starts}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     with a capital letter, but only $lowerCamelCase}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     or $snake_case is allowed}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
507 | ERROR   | [ ] Variable "CO9_last_element_sewn_closed" starts}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     with a capital letter, but only $lowerCamelCase}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     or $snake_case is allowed}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
509 | ERROR   | [ ] Variable "CO9_last_element_doctor" starts with}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     a capital letter, but only $lowerCamelCase or}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     $snake_case is allowed}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
509 | ERROR   | [ ] Variable "CO9_last_element_doctor" starts with}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     a capital letter, but only $lowerCamelCase or}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     $snake_case is allowed}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
510 | ERROR   | [ ] Variable "CO9_last_element_nurse" starts with a}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     capital letter, but only $lowerCamelCase or}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     $snake_case is allowed}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
510 | ERROR   | [ ] Variable "CO9_last_element_nurse" starts with a}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     capital letter, but only $lowerCamelCase or}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     $snake_case is allowed}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
511 | ERROR   | [ ] Variable}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     "CO9_last_element_traditional_excisors" starts}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     with a capital letter, but only $lowerCamelCase}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     or $snake_case is allowed}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
511 | ERROR   | [ ] Variable}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     "CO9_last_element_traditional_excisors" starts}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     with a capital letter, but only $lowerCamelCase}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     or $snake_case is allowed}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
519 | WARNING | [ ] Line exceeds 80 characters; contains 85}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     characters}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
520 | ERROR   | [x] There must be exactly one blank line before the}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     tags in a doc comment}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
520 | ERROR   | [ ] Missing parameter comment}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
520 | ERROR   | [ ] Doc comment for parameter $country_list does}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     not match actual variable name <undefined>}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
523 | ERROR   | [x] Return comment indentation must be 3 spaces,}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     found 2 spaces}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
571 | ERROR   | [x] Expected newline after closing brace}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
578 | ERROR   | [x] Expected newline after closing brace}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
594 | ERROR   | [x] Inline control structures are not allowed}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
623 | WARNING | [ ] Line exceeds 80 characters; contains 85}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     characters}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
625 | ERROR   | [ ] Description for the @return value is missing}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
627 | ERROR   | [x] Additional blank lines found at end of doc}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     comment}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
640 | WARNING | [ ] Line exceeds 80 characters; contains 83}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     characters}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
657 | WARNING | [ ] Line exceeds 80 characters; contains 85}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     characters}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
660 | ERROR   | [x] Return comment indentation must be 3 spaces,}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     found 2 spaces}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
746 | ERROR   | [x] There must be exactly one blank line before the}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     tags in a doc comment}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
747 | ERROR   | [x] Parameter comment indentation must be 3 spaces,}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     found 1 spaces}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
749 | ERROR   | [ ] Description for the @return value is missing}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
754 | WARNING | [ ] Line exceeds 80 characters; contains 96}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     characters}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
754 | ERROR   | [x] Line indented incorrectly; expected 2 spaces,}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     found 0}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
759 | ERROR   | [x] Inline control structures are not allowed}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
778 | ERROR   | [x] There must be exactly one blank line before the}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     tags in a doc comment}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
778 | ERROR   | [ ] Doc comment for parameter $indicator does not}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     match actual variable name <undefined>}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
779 | ERROR   | [x] Parameter comment indentation must be 3 spaces,}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     found 1 spaces}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
781 | ERROR   | [ ] Description for the @return value is missing}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
784 | ERROR   | [x] Line indented incorrectly; expected 2 spaces,}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     found 0}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
789 | WARNING | [x] A comma should follow the last multiline array}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     item. Found: '#12745d'}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
798 | ERROR   | [x] Parameter comment indentation must be 3 spaces,}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     found 2 spaces}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
800 | ERROR   | [x] Parameter comment indentation must be 3 spaces,}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     found 2 spaces}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
803 | ERROR   | [x] Return comment indentation must be 3 spaces,}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     found 2 spaces}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
814 | WARNING | [ ] Line exceeds 80 characters; contains 101}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     characters}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
817 | ERROR   | [x] Parameter comment indentation must be 3 spaces,}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     found 2 spaces}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
820 | ERROR   | [x] Return comment indentation must be 3 spaces,}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     found 2 spaces}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
827 | WARNING | [ ] Line exceeds 80 characters; contains 82}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     characters}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
828 | ERROR   | [ ] If the line declaring an array spans longer}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     than 80 characters, each element should be}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     broken into its own line}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
829 | ERROR   | [ ] If the line declaring an array spans longer}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     than 80 characters, each element should be}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     broken into its own line}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
830 | ERROR   | [ ] If the line declaring an array spans longer}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     than 80 characters, each element should be}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     broken into its own line}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
831 | ERROR   | [ ] If the line declaring an array spans longer}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     than 80 characters, each element should be}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     broken into its own line}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
832 | ERROR   | [ ] If the line declaring an array spans longer}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     than 80 characters, each element should be}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     broken into its own line}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
833 | ERROR   | [ ] If the line declaring an array spans longer}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     than 80 characters, each element should be}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     broken into its own line}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
836 | ERROR   | [ ] If the line declaring an array spans longer}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     than 80 characters, each element should be}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     broken into its own line}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
837 | ERROR   | [ ] If the line declaring an array spans longer}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     than 80 characters, each element should be}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     broken into its own line}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
840 | ERROR   | [ ] If the line declaring an array spans longer}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     than 80 characters, each element should be}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     broken into its own line}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
841 | ERROR   | [ ] If the line declaring an array spans longer}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     than 80 characters, each element should be}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     broken into its own line}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
842 | ERROR   | [ ] If the line declaring an array spans longer}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     than 80 characters, each element should be}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     broken into its own line}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
843 | ERROR   | [ ] If the line declaring an array spans longer}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     than 80 characters, each element should be}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     broken into its own line}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
844 | ERROR   | [ ] If the line declaring an array spans longer}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     than 80 characters, each element should be}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     broken into its own line}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
845 | ERROR   | [ ] If the line declaring an array spans longer}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     than 80 characters, each element should be}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     broken into its own line}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
846 | ERROR   | [ ] If the line declaring an array spans longer}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     than 80 characters, each element should be}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     broken into its own line}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
847 | ERROR   | [ ] If the line declaring an array spans longer}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     than 80 characters, each element should be}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     broken into its own line}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
850 | ERROR   | [ ] If the line declaring an array spans longer}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     than 80 characters, each element should be}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     broken into its own line}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
851 | ERROR   | [ ] If the line declaring an array spans longer}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     than 80 characters, each element should be}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     broken into its own line}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
852 | ERROR   | [ ] If the line declaring an array spans longer}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     than 80 characters, each element should be}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     broken into its own line}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
853 | ERROR   | [ ] If the line declaring an array spans longer}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     than 80 characters, each element should be}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     broken into its own line}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
856 | ERROR   | [ ] If the line declaring an array spans longer}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     than 80 characters, each element should be}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     broken into its own line}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
857 | ERROR   | [ ] If the line declaring an array spans longer}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     than 80 characters, each element should be}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     broken into its own line}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
858 | ERROR   | [ ] If the line declaring an array spans longer}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     than 80 characters, each element should be}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     broken into its own line}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
861 | ERROR   | [ ] If the line declaring an array spans longer}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     than 80 characters, each element should be}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     broken into its own line}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
862 | ERROR   | [ ] If the line declaring an array spans longer}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     than 80 characters, each element should be}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     broken into its own line}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
863 | ERROR   | [ ] If the line declaring an array spans longer}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     than 80 characters, each element should be}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     broken into its own line}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
864 | ERROR   | [ ] If the line declaring an array spans longer}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     than 80 characters, each element should be}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     broken into its own line}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
865 | ERROR   | [ ] If the line declaring an array spans longer}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     than 80 characters, each element should be}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     broken into its own line}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
866 | ERROR   | [ ] If the line declaring an array spans longer}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     than 80 characters, each element should be}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     broken into its own line}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
867 | ERROR   | [ ] If the line declaring an array spans longer}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     than 80 characters, each element should be}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     broken into its own line}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
868 | ERROR   | [ ] If the line declaring an array spans longer}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     than 80 characters, each element should be}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     broken into its own line}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
869 | ERROR   | [ ] If the line declaring an array spans longer}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     than 80 characters, each element should be}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     broken into its own line}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
870 | ERROR   | [ ] If the line declaring an array spans longer}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     than 80 characters, each element should be}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     broken into its own line}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
871 | ERROR   | [ ] If the line declaring an array spans longer}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     than 80 characters, each element should be}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     broken into its own line}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
872 | ERROR   | [ ] If the line declaring an array spans longer}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     than 80 characters, each element should be}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     broken into its own line}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
873 | ERROR   | [ ] If the line declaring an array spans longer}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     than 80 characters, each element should be}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     broken into its own line}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
874 | ERROR   | [ ] If the line declaring an array spans longer}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     than 80 characters, each element should be}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     broken into its own line}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
875 | ERROR   | [ ] If the line declaring an array spans longer}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     than 80 characters, each element should be}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     broken into its own line}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
876 | ERROR   | [ ] If the line declaring an array spans longer}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     than 80 characters, each element should be}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     broken into its own line}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
884 | ERROR   | [ ] If the line declaring an array spans longer}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     than 80 characters, each element should be}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     broken into its own line}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
888 | ERROR   | [ ] If the line declaring an array spans longer}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     than 80 characters, each element should be}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     broken into its own line}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
890 | ERROR   | [ ] If the line declaring an array spans longer}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     than 80 characters, each element should be}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     broken into its own line}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
895 | WARNING | [ ] Line exceeds 80 characters; contains 86}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     characters}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
898 | ERROR   | [x] Parameter comment indentation must be 3 spaces,}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     found 2 spaces}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
900 | ERROR   | [ ] Description for the @return value is missing}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
936 | WARNING | [ ] Line exceeds 80 characters; contains 103}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     characters}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
953 | ERROR   | [x] Expected newline after closing brace}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
966 | ERROR   | [x] Functions must not contain multiple empty lines}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     in a row; found 2 empty lines}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
973 | WARNING | [ ] Line exceeds 80 characters; contains 81}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     characters}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
979 | ERROR   | [ ] Variable "AREA_JSON_DATA_OBJ" starts with a}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     capital letter, but only $lowerCamelCase or}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     $snake_case is allowed}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
997 | ERROR   | [ ] If the line declaring an array spans longer}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     than 80 characters, each element should be}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     broken into its own line}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
998 | ERROR   | [ ] If the line declaring an array spans longer}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     than 80 characters, each element should be}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     broken into its own line}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
  }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
998 | ERROR   | [ ] Variable "AREA_JSON_DATA_OBJ" starts with a}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     capital letter, but only $lowerCamelCase or}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     $snake_case is allowed}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
 }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
1002 | ERROR   | [ ] If the line declaring an array spans longer}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     than 80 characters, each element should be}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     broken into its own line}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
 }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
1006 | WARNING | [ ] Line exceeds 80 characters; contains 87}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     characters}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
 }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
1009 | ERROR   | [x] Parameter comment indentation must be 3 spaces,}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     found 2 spaces}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
 }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
1011 | ERROR   | [ ] Description for the @return value is missing}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
 }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
1038 | ERROR   | [ ] Variable "SERVER_NAME" starts with a capital}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     letter, but only $lowerCamelCase or $snake_case}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     is allowed}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
 }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
1049 | WARNING | [ ] All constants defined by a module must be}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     prefixed with the module's name, expected}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     "UNFPA_GLOBAL_DASHBOARD_DEFAULT_AREA_ID" but}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     found "DEFAULT_AREA_ID"}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
 }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
1062 | ERROR   | [x] Inline comments must start with a capital}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     letter}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
 }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
1062 | ERROR   | [x] Inline comments must end in full-stops,}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     exclamation marks, colons, question marks, or}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     closing parentheses}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
 }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
1067 | ERROR   | [x] Inline control structures are not allowed}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
 }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
1073 | ERROR   | [x] Inline control structures are not allowed}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
 }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
1075 | ERROR   | [x] Expected 1 space after ELSE keyword; newline}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     found}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
 }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
1075 | ERROR   | [x] Inline control structures are not allowed}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
 }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
1079 | ERROR   | [x] Functions must not contain multiple empty lines}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     in a row; found 2 empty lines}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
 }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
1091 | ERROR   | [x] Functions must not contain multiple empty lines}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     in a row; found 2 empty lines}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
 }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
1093 | ERROR   | [ ] If the line declaring an array spans longer}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     than 80 characters, each element should be}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     broken into its own line}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
 }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
1093 | ERROR   | [ ] Variable "SERVER_NAME" starts with a capital}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     letter, but only $lowerCamelCase or $snake_case}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     is allowed}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
 }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
1107 | ERROR   | [x] Functions must not contain multiple empty lines}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     in a row; found 2 empty lines}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
 }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
1111 | ERROR   | [x] Line indented incorrectly; expected 2 spaces,}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     found 0}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
 }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
1118 | ERROR   | [ ] If the line declaring an array spans longer}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     than 80 characters, each element should be}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     broken into its own line}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
 }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
1125 | ERROR   | [x] Parameter comment indentation must be 3 spaces,}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     found 2 spaces}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
 }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
1128 | ERROR   | [x] Return comment indentation must be 3 spaces,}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     found 1 spaces}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
 }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
1130 | ERROR   | [ ] Invalid function name, expected}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     get_sel_area_data_js_on_object but found}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     getSelAreaDataJSONObject}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
 }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
1135 | ERROR   | [x] Inline comments must end in full-stops,}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     exclamation marks, colons, question marks, or}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     closing parentheses}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
 }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
1139 | WARNING | [x] There must be no blank line following an inline}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     comment}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
 }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
1139 | ERROR   | [x] No space found before comment text; expected}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     "// $fileContents = trim(str_replace('"', "'",}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     $fileContents));" but found "//$fileContents =}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     trim(str_replace('"', "'", $fileContents));"}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
 }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
1139 | ERROR   | [x] Inline comments must end in full-stops,}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     exclamation marks, colons, question marks, or}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     closing parentheses}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
 }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
1143 | ERROR   | [x] Perl-style comments are not allowed; use "//}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     Comment" instead}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
 }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
1144 | ERROR   | [ ] Variable "JSONdataVal" starts with a capital}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     letter, but only $lowerCamelCase or $snake_case}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     is allowed}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
 }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
1148 | WARNING | [x] There must be no blank line following an inline}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     comment}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
 }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
1148 | ERROR   | [x] Inline comments must end in full-stops,}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     exclamation marks, colons, question marks, or}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     closing parentheses}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
 }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
1153 | ERROR   | [x] Inline comments must end in full-stops,}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     exclamation marks, colons, question marks, or}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     closing parentheses}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
 }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
1156 | ERROR   | [x] There must be exactly one blank line before the}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     tags in a doc comment}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
 }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
1156 | ERROR   | [ ] Doc comment for parameter $cid does not match}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     actual variable name $areaListdata}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
 }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
1157 | ERROR   | [x] Parameter comment indentation must be 3 spaces,}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     found 2 spaces}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
 }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
1160 | ERROR   | [x] Return comment indentation must be 3 spaces,}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     found 2 spaces}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
 }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
1162 | ERROR   | [ ] Invalid function name, expected area_list but}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     found areaList}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
 }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
1162 | ERROR   | [x] Expected 1 blank line before function; 0 found}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
 }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
1186 | ERROR   | [ ] Doc comment is empty}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
 }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
1216 | ERROR   | [x] Functions must not contain multiple empty lines}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     in a row; found 2 empty lines}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
 }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
1232 | ERROR   | [x] No space found before comment text; expected}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     "// drupal_add_js($path .}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     '/js/ay-dashboard.js');" but found}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     "//drupal_add_js($path .}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     '/js/ay-dashboard.js');"}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
 }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
1232 | ERROR   | [x] Inline comments must end in full-stops,}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     exclamation marks, colons, question marks, or}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
      }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
|         |     closing parentheses}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
 }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
1235 | ERROR   | [x] Expected newline after closing brace}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
 }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
1235 | ERROR   | [x] Use "elseif" in place of "else if"}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\fs18
 }{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
1237 | ERROR   | [x] Expected newline after closing brace}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
----------------------------------------------------------------------}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
PHPCBF CAN FIX THE 95 MARKED SNIFF VIOLATIONS AUTOMATICALLY}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033{\cf0\hich\af3\dbch\af3\afs18\rtlch \ltrch\loch\fs18
----------------------------------------------------------------------}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af3\langfe1033\dbch\af3\afs24\lang1033\loch\f3\fs24\lang1033\sl276\slmult1\sb0\sa200{\afs18\rtlch \ltrch\loch\fs18\lang9
}
\par }