{\rtf1\ansi\ansicpg1252\deff0\deflang1033{\fonttbl{\f0\fnil\fcharset0 Calibri;}}
{\*\generator Msftedit 5.41.21.2510;}\viewkind4\uc1\pard\sa200\sl276\slmult1\lang9\b\f0\fs22 what is D\b0\par
\par
Drupal is free, open source software that can be used by individuals or groups of users -- even those lacking technical skills -- to easily create and manage many types of Web sites. framework written in PHP\par
\par
 It enables you to organize, manage and publish content with ease and comes with a variety of customization option.\par
\par
 It is used as a back-end framework for at least 2.1% of all Web sites worldwide\par
\par
To clarify the difference between Drupal and other CMSs, consider the example of a news site. You want to be able to post news articles on the site, and you want the homepage to have a section featuring the five most recent ones. Next, you decide that you want to add a blog section, and put a list of links to the five most recent blog entries on the homepage as well.\par
\par
One of the most important components of the Drupal project is its community of supporters (contributors, developers, evangelists, business owners, etc.).\par
\par
The average content management system (CMS) is like a toy truck\emdash specific assumptions have been made about how it will be used, and these assumptions are difficult to override. Content management frameworks, on the other hand, are like the raw materials needed to make any toy\emdash no assumptions have been made about how they\rquote ll be used, and the builder needs expert technical knowledge in order to make anything at all.\par
\par
 Unlike other CMSs, Drupal isn\rquote t a prefabricated toy truck, but rather a collection of wheels, windshields, axles, frames, etc., that a toy maker can easily connect together. With Drupal, a maker could create a toy truck, but she or he could just as easily create a toy airplane, submarine, or robot.\par
\par
Highly Scalable\par
\par
Drupal\rquote s scalability means it can manage the largest, most high-traffic sites in the world. Sites that experience daily high traffic, like Weather.com, and sites that see periodic spikes in traffic, like Grammy.com and the publications of Time, Inc. (like SI.com) all use Drupal to ensure scalability as traffic and content grows. Learn more\par
\par
\par
Mobile-First\par
\par
Build responsive sites and also create web applications that deliver optimal visitor experiences, no matter what device they\rquote re on. Drupal supports responsive design best practices and ensures your users get a seamless content experience every time, on every device.\par
\par
\par
Integrated Digital Applications\par
\par
Drupal integrates easily with a wide ecosystem of digital marketing technology and other business applications, so you can use the best set of tools today, and flex with new tools tomorrow. And, Drupal\rquote s API-first focus means connecting content to other sites and applications, making content more powerful.\par
\par
\par
Security\par
\par
Drupal\rquote s community provide countless eyes and ears to help keep Drupal sites secure. Rely on your team, but also on the open source community to identify vulnerabilities and create/deliver patches automatically to protect your sites and your business. And never lose a night\rquote s sleep. Learn more\par
\par
Easy Content Authoring\par
\par
Essential tools for content creation and publishing, like a customizable WYSIWYG editor for content and marketing pros. Authentication and permissions for managing editorial workflows as well as content. Authors, publishers, site admins and developers all use Drupal to meet their requirements, with a workflow that offers them just enough access to features they need. Learn more\par
\par
\par
Flexible Content Architecture\par
\par
Create the right content architecture using the Admin Interface or do it programatically. Display only the content appropriate for each context with powerful display mode tools and Views. Include a variety of media types (images, video, pdfs, etc.). Customizable menus create a comfortable user experience, creating paths to content across multiple devices.\par
\par
Custom Functionality: Are you frustrated with web site builders or limitations of Wordpress? Drupal may be the answer. Drupal is highly customizable and even allows the integration of web applications and mashups using third party APIs.\par
\par
Flexible Implementation: Drupal allows your website to evolve in any direction. For example, you may start with a blog but then want the option of adding other features like a wiki, electronic commerce, forums, multiple content types, etc.\par
\par
Complex Components: Complex forms, workflows, multilingual sites, and multi-sites can be set up easily with Drupal. There are also over 16,000 Drupal modules available to provide excellent functionality for your website, from commerce to directories and image galleries.\par
\par
Configurable Website: Drupal can easily be configured to interact with other sites or technologies. If you want, you can even configure it to interact with another Drupal site!\par
\par
Customize-able Content Types: With Drupal, you have ability to create your own content types. For example, you can create a custom format for directory listings or add a custom field to a page(CCK module prebuild in drupal7 etc). This is one of the most used features of Drupal.\par
\par
List, Sort, & Search Information:\par
You can quickly organize and display lists of information.\par
\par
\par
\par
Multisite\par
\par
Manage many sites across your organization, brands, geographies and campaigns on a single platform that allows quick, easy site creation and deployment.\par
\par
\par
Tools for Business, with No Limitations\par
\par
Drupal doesn\rquote t dictate to the business; the business dictates what it needs from Drupal. Too many CMS platforms impose their will on your business, forcing you to conform to their way of doing things. Drupal acts the opposite way: use Drupal to create a solution that supports your specific business needs. Drupal creates a foundation for limitless solutions.\par
\par
\par
Strong Stack Foundation\par
\par
Drupal lives on a modern LAMP technology stack: Linux, Apache, MySQL and PHP, which together are meeting the needs of fast-moving, flexible, agile enterprises and brands building next generation digital platforms.\par
\par
Strong Stack Foundation\par
\par
Drupal lives on a modern LAMP technology stack: Linux, Apache, MySQL and PHP, which together are meeting the needs of fast-moving, flexible, agile enterprises and brands building next generation digital platforms.\par
\par
\par
Community of Talent and Experience\par
\par
The worldwide Drupal community shares its secrets on how to get things done, right. If you have a question, someone has the answer. Leverage the power of open source by building on previously-created solutions. Drupal developers have access to worldwide community experience. When\rquote s the last time your software provider gave you this much support?\par
\par
\par
Multilingual\par
\par
Architect and configure Drupal to deliver sites to a global, multilingual audience as part of your localization strategy. Drupal makes it easy to create and manage sites for different regions and geographies, and support one to many languages across all of your sites, translating and localizing your content and experiences. Learn more\par
-------------------------------------------------------------------------------------------------------------------\par
\b Drupal caching\b0\par
Drupal will begin storing database queries in a special table that allows for faster response times. \par
\par
\par
Page caching:\par
\par
If enables, page caching will only be used for anonymous users.\par
If you enable page caching, the entire HTML of each page will be stored in the database. This significantly reduces the amount of queries needed.\par
This automatically means that blocks will also get cached, disregarded their own cache settings.\par
If Varnish is configured, this will also enable varnish caching\par
The page cache max-age will be used (see below) for each page.\par
You can check the "X-Drupal-Cache" HTTP header to check if this cache is HIT.\par
Block caching:\par
\par
If you enable block caching, without enabling page caching, the block cache settings will be used (for anonymous and authenticated).\par
The defaults for most blocks is "don't cache" because that is the default for blocks who don't have their cache settings specifically declared.\par
You can use block_cache_alter module to set this for each block.\par
When it's block created by Views, you can set the cache settings for a block in Views.\par
Minimum cache lifetime:\par
\par
This is the amount of time before the page cache is cleared.\par
Page caches are cleared on each cron run (system_cron).\par
Be warned: incorrect settings of your cron and this setting might kill your website performance. See also this issue.\par
Expiration of cached pages:\par
\par
This only applies for external caching mechanisms, for example your browser cache or Varnish.\par
It sets the Cache-Control max-age value in the HTTP-HEADERS.\par
This setting only takes effect when page caching is turned on.\par
-------------------------------------------------------------------------------------------------------------------\par
\b databse system\b0\par
In Drupal, each type of information has its own database table. For instance, the basic information about the nodes of your site are stored in the Node table, Comments and Users also have their own database tables, and roles, permissions, and other settings are also stored in database tables.\par
-------------------------------------------------------------------------------------------------------------------\par
\b background\b0\par
Someone fires a request to your webserver. They might get a cookie if they've already logged into the site.\par
The server gets the request. It goes to .htaccess which says everything should go to index.php\par
index.php loads the APIs and gets them ready to handle the request\par
The Menu API which was loaded looks up the paths that different modules have registered that they handle.\par
The module gets the request and fires hooks to see whether any module wants to help while it's building the page.\par
The module returns some info back to the menu system.\par
If the everything looks good, it figures out which theme is active and hands off the raw data to the theme layer.\par
That gets kicked back to Drupal.\par
That gets kicked back to the web server, which kicks it back to the user.\par
}
 